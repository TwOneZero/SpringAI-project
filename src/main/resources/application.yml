debug: false
logging:
  level:
    com.bigteam.aichat: debug
    org.springframework:
      web.servlet: info
      ai.chat.client.advisor: debug


# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        all: true
    enable:
      all: true

server:
  port: ${APP_SERVER_PORT:8080}
  tomcat:
    max-http-form-post-size: 100MB
  servlet:
    encoding:
      charset: UTF-8
      force: true


spring:
  config:
    import: optional:file:.env[.properties]
  profiles:
    active:
      - ${SPRING_PROFILE}
  
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_schema: public

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useUnicode=true&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  ai:
    ## Local LLM
    ollama:
      base-url: http://localhost:11434  # Ollama 서버 URL
      init:
        chat:
          additional-models:
            - gemma2:2b
      chat:
        options:
          model: ${DEFAULT_CHAT_MODEL} # 사용할 chat 모델
      embedding:
        options:
          model: ${DEFAULT_EMBEDDING_MODEL} # RAG 위한 임베딩 모델
    vectorstore:
      pgvector:
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        initialize-schema: true
        max-document-batch-size: 10000 # Optional: Maximum number of documents per batch
    chat:
      memory:
        repository:
          jdbc:
            initialize-schema: always
      observations:
        log-prompt: true
        log-completion: true
        include-error-logging: true


##swaggerdoc
springdoc:
  version: v4.2.0
  packages-to-scan: com.bigteam.aichat
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: alpha
    doc-expansion: none
  api-docs:
    path: /v3/api-docs
    groups:
      enabled: true
  cache:
    disabled: true